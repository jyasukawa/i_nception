events {}

http {
    server {
        include /etc/nginx/mime.types;
        # mime.typesファイルには、ファイルの拡張子とそのファイルがどのMIMEタイプに属するかを定義する情報が含まれています。
        # これがないと画像がデカすぎたりする

        listen 443 ssl;
        listen [::]:443 ssl;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_certificate /etc/nginx/ssl/inception.crt;
        ssl_certificate_key /etc/nginx/ssl/inception.key;

        root /var/www/html;
        server_name $DOMAIN_NAME;
        index index.php;

        location / {
            try_files $uri $uri/ =404;
# try_files $uri $uri/ /index.php$is_args$args;もあり
# このディレクティブは、Nginxがファイルやディレクトリを検索する際の方法を指定します。
# 最初に、リクエストされたURIがファイルとして存在するかどうかをチェックします。
# 次に、リクエストされたURIがディレクトリとして存在するかどうかをチェックします。
# 存在しない場合は、/index.phpにリクエストを転送します。$is_args$argsは、クエリ文字列を含む場合にそのまま渡すためのものです。
# try_files $uri $uri/ =404;
# このディレクティブも同様に、ファイルやディレクトリの存在を確認します。
# 存在しない場合は、404エラーを返します。
        }

        location ~ \.php$ {
            include snippets/fastcgi-php.conf;
            # include fastcgi_params;
            fastcgi_pass wordpress:9000;
        }
            # include snippets/fastcgi-php.conf;の代わりに以下４行も可能
            # fastcgi_index index.php;
            # fastcgi_split_path_info ^(.+\.php)(/.+)$;
            # fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            # fastcgi_param PATH_INFO $fastcgi_path_info;
# ocation ~ \.php$ { ... }:
# この行は、正規表現を使用してURIが.phpで終わるリクエストにマッチすることを示します。
# \はエスケープ文字であり、.や$などの特殊文字を正規表現として解釈するために使用されます。
# \.php$はURIの末尾が.phpであることを意味します。
# include snippets/fastcgi-php.conf;:
# snippets/fastcgi-php.confファイルをインクルードしています。これはPHP FastCGIの設定を含むファイルです。
# この設定ファイルには、FastCGIのパラメータや設定が含まれています。
# include fastcgi_params;:
# fastcgi_paramsファイルをインクルードしています。これはFastCGIの一般的なパラメータが定義されています。
# fastcgi_pass wordpress:9000;:
# FastCGIプロセスを通じてPHPリクエストを処理するため、wordpressという名前のサービス（またはコンテナ）にポート9000でリクエストを転送します。
# ここで指定されたポートは、WordPressがPHP FastCGIプロセスを待ち受けているポートに合わせる必要があります。
    }
}
